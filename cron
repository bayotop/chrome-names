#!/bin/bash

if [[ ! -d $1 ]]; then
    echo "error: path to existing blink source folder is required"
    exit 1
fi

type git >/dev/null 2>&1 || { echo >&2 "error: git is required"; exit 1; }
type jq >/dev/null 2>&1 || { echo >&2 "error: jq is required"; exit 1; }
type json5 >/dev/null 2>&1 || { echo >&2 "error: json5 is required (npm install --global json5)"; exit 1; }

DIR="$(dirname "$0")"
BLINK=$1
DATA=$DIR/data
SOURCE=$DATA/json
CLEAN=$DATA/plain
SUM=$DATA/in.txt

mkdir -p "$SOURCE" 
mkdir -p "$CLEAN"
true > "$SUM"

git -C "$BLINK" pull
find "$1" -type f -name "*.json5" -not -path "*/tests/*" -exec cp {} "$SOURCE" \;

for file in "$SOURCE"/*.json5; do
    output=$CLEAN/$(basename "$file" | rev | sed "1 s/5nosj\./tsl\./" | rev) 
    json=$(sed "s$ # $ // $" < "$file" | json5)
    echo "$(basename "$file")": "$(echo "$json" | jq keys)" >> "$SUM"

    if [[ $(echo "$json" | jq .data) != "null" ]]; then
        jq -r '.data[] | if type=="string" then . else .name end' <<< "$json" > "$output"
        continue
    fi
    if [[ $(echo "$json" | jq .observers) != "null" ]]; then
        jq -r ".observers | keys[]" <<< "$json" > "$output"
        continue
    fi
    if [[ $(echo "$json" | jq .attributes) != "null" ]]; then
        jq -r ".attributes[] | .name" <<< "$json" > "$output"
        jq -r ".roles[] | .name" <<< "$json" >> "$output"
        continue
    fi

    echo "error: $file has unexpected format"
done

git -C $DIR add *
git -C $DIR commit -m "Update data" && git -C $DIR push
